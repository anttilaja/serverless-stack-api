{"ast":null,"code":"import \"source-map-support/register\";\nimport stripePackage from \"stripe\";\nimport handler from \"./libs/handler-lib\";\nimport { calculateCost } from \"./libs/billing-lib\";\nexport const main = handler(async (event, context) => {\n  const {\n    storage,\n    source\n  } = JSON.parse(event.body);\n  const amount = calculateCost(storage);\n  const description = \"Scratch charge\"; // Load our secret key from the  environment variables\n\n  const stripe = stripePackage(process.env.stripeSecretKey);\n  await stripe.charges.create({\n    source,\n    amount,\n    description,\n    currency: \"usd\"\n  });\n  return {\n    status: true\n  };\n});","map":{"version":3,"sources":["/home/ubunturemote/devprojects/node/notes-app-api/billing.js"],"names":["stripePackage","handler","calculateCost","main","event","context","storage","source","JSON","parse","body","amount","description","stripe","process","env","stripeSecretKey","charges","create","currency","status"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,QAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAO,MAAMC,IAAI,GAAGF,OAAO,CAAC,OAAOG,KAAP,EAAcC,OAAd,KAA0B;AACpD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAjB,CAA5B;AACA,QAAMC,MAAM,GAAGT,aAAa,CAACI,OAAD,CAA5B;AACA,QAAMM,WAAW,GAAG,gBAApB,CAHoD,CAKpD;;AACA,QAAMC,MAAM,GAAGb,aAAa,CAACc,OAAO,CAACC,GAAR,CAAYC,eAAb,CAA5B;AAEA,QAAMH,MAAM,CAACI,OAAP,CAAeC,MAAf,CAAsB;AAC1BX,IAAAA,MAD0B;AAE1BI,IAAAA,MAF0B;AAG1BC,IAAAA,WAH0B;AAI1BO,IAAAA,QAAQ,EAAE;AAJgB,GAAtB,CAAN;AAMA,SAAO;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAP;AACD,CAf0B,CAApB","sourcesContent":["import stripePackage from \"stripe\";\nimport handler from \"./libs/handler-lib\";\nimport { calculateCost } from \"./libs/billing-lib\";\n\nexport const main = handler(async (event, context) => {\n  const { storage, source } = JSON.parse(event.body);\n  const amount = calculateCost(storage);\n  const description = \"Scratch charge\";\n\n  // Load our secret key from the  environment variables\n  const stripe = stripePackage(process.env.stripeSecretKey);\n\n  await stripe.charges.create({\n    source,\n    amount,\n    description,\n    currency: \"usd\"\n  });\n  return { status: true };\n});\n"]},"metadata":{},"sourceType":"module"}