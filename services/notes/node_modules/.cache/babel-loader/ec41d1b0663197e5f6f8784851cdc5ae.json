{"ast":null,"code":"import \"source-map-support/register\";\nimport handler from \"./libs/handler-lib\";\nimport dynamoDb from \"./libs/dynamodb-lib\";\nexport const main = handler(async (event, context) => {\n  const params = {\n    TableName: process.env.tableName,\n    // 'Key' defines the partition key and sort key of the item to be retrieved\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'noteId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      noteId: event.pathParameters.id\n    }\n  };\n  console.log(\"params: \" + JSON.stringify(params));\n  const result = await dynamoDb.get(params);\n\n  if (!result.Item) {\n    throw new Error(\"Item not found.\");\n  } // Return the retrieved item\n\n\n  return result.Item;\n});","map":{"version":3,"sources":["/home/ubunturemote/devprojects/node/notes-app-api/get.js"],"names":["handler","dynamoDb","main","event","context","params","TableName","process","env","tableName","Key","userId","requestContext","identity","cognitoIdentityId","noteId","pathParameters","id","console","log","JSON","stringify","result","get","Item","Error"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,MAAMC,IAAI,GAAGF,OAAO,CAAC,OAAOG,KAAP,EAAcC,OAAd,KAA0B;AACpD,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADV;AAEb;AACA;AACA;AACAC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAER,KAAK,CAACS,cAAN,CAAqBC,QAArB,CAA8BC,iBADnC;AAEHC,MAAAA,MAAM,EAAEZ,KAAK,CAACa,cAAN,CAAqBC;AAF1B;AALQ,GAAf;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAWC,IAAI,CAACC,SAAL,CAAehB,MAAf,CAAvB;AACA,QAAMiB,MAAM,GAAG,MAAMrB,QAAQ,CAACsB,GAAT,CAAalB,MAAb,CAArB;;AACA,MAAK,CAAEiB,MAAM,CAACE,IAAd,EAAoB;AAClB,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD,GAfmD,CAiBpD;;;AACA,SAAOH,MAAM,CAACE,IAAd;AACD,CAnB0B,CAApB","sourcesContent":["import handler from \"./libs/handler-lib\";\nimport dynamoDb from \"./libs/dynamodb-lib\";\n\nexport const main = handler(async (event, context) => {\n  const params = {\n    TableName: process.env.tableName,\n    // 'Key' defines the partition key and sort key of the item to be retrieved\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'noteId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      noteId: event.pathParameters.id\n    }\n  };\n  console.log(\"params: \"+JSON.stringify(params));\n  const result = await dynamoDb.get(params);\n  if ( ! result.Item) {\n    throw new Error(\"Item not found.\");\n  }\n\n  // Return the retrieved item\n  return result.Item;\n});\n\n"]},"metadata":{},"sourceType":"module"}